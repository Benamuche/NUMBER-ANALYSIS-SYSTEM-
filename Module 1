import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.neural_network import MLPRegressor

# Function to generate the dataset from 1 to 117480
def generate_dataset():
    return list(range(1, 117481))

# Function to split the dataset into two sets
def split_dataset(dataset):
    initial_set = dataset[:-10]
    last_set = dataset[-10:]
    return initial_set, last_set

# Function to perform the linear regression
def perform_linear_regression(X_train, y_train):
    model = LinearRegression()
    model.fit(X_train, y_train)
    return model

# Function to perform random forest regression
def perform_random_forest_regression(X_train, y_train):
    model = RandomForestRegressor()
    model.fit(X_train, y_train)
    return model

# Function to perform MLP regression
def perform_mlp_regression(X_train, y_train):
    model = MLPRegressor(max_iter=1000)
    model.fit(X_train, y_train)
    return model

# Function to make predictions
def make_predictions(model, X_test):
    predictions = model.predict(X_test)
    return np.round(predictions).astype(int)

# Function to save predictions to CSV
def save_predictions(predictions_dict):
    df = pd.DataFrame(predictions_dict)
    df.to_csv('next_predictions.csv', index=False)

# Main function
def main():
    # Generate the dataset and split it into initial and last sets
    dataset = generate_dataset()
    initial_set, last_set = split_dataset(dataset)

    # Convert the data into numpy arrays for model training
    X_train = np.array(initial_set).reshape(-1, 1)
    y_train = np.arange(1, len(initial_set) + 1)

    # Perform different regression techniques
    linear_model = perform_linear_regression(X_train, y_train)
    rf_model = perform_random_forest_regression(X_train, y_train)
    mlp_model = perform_mlp_regression(X_train, y_train)

    # Read last results from the Excel file
    last_results_df = pd.read_excel('last_results.xlsx')
    last_results = last_results_df.values.ravel().tolist()

    # Make predictions for the next set of numbers
    X_test = np.array(last_results).reshape(-1, 1)

    linear_predictions = make_predictions(linear_model, X_test)
    rf_predictions = make_predictions(rf_model, X_test)
    mlp_predictions = make_predictions(mlp_model, X_test)

    # Create a dictionary to store the predictions
    predictions_dict = {
        'Linear Regression Predictions': linear_predictions,
        'Random Forest Regression Predictions': rf_predictions,
        'MLP Regression Predictions': mlp_predictions
    }

    # Save the predictions to a CSV file
    save_predictions(predictions_dict)

    # Store the results for future analysis (you can save to a file or database)
    past_results = initial_set + last_results
    save_past_results(past_results)

if __name__ == "__main__":
    main()
